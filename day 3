Day 3: Advanced Sorting and Dynamic Programming

1. Problem: Insertion Sort Implementation

Problem Statement:
Implement the insertion sort algorithm to sort an array of integers.

Input:
An array of integers.

Output:
The sorted array.

Example:
Input:
[5, 3, 8, 2, 7, 1, 6, 4]
Output:
[1, 2, 3, 4, 5, 6, 7, 8]

2. Problem: Quick Sort Implementation

Problem Statement:
Implement the quick sort algorithm to sort an array of integers.

Input:
An array of integers.

Output:
The sorted array.

Example:
Input:
[5, 3, 8, 2, 7, 1, 6, 4]
Output:
[1, 2, 3, 4, 5, 6, 7, 8]

3. Problem: Longest Palindromic Subsequence (LPS)

Problem Statement:
Given a string, find the length of the longest palindromic subsequence (LPS).

Input:
A string.

Output:
The length of the longest palindromic subsequence.

Example:
Input:
String: "BBABCBCAB"
Output:
Length of LPS: 7 (LPS: "BABCBAB")
