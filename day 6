Day 6: Trees and Dynamic Programming
1. Problem: Binary Tree Traversal

Problem Statement:
Implement functions to perform in-order, pre-order, and post-order traversals of a binary tree.

Input:
A binary tree.

Output:
The elements visited during each traversal.

Example:
Input:
1
/
2 3
/
4 5
Output:
In-order Traversal: 4 -> 2 -> 5 -> 1 -> 3
Pre-order Traversal: 1 -> 2 -> 4 -> 5 -> 3
Post-order Traversal: 4 -> 5 -> 2 -> 3 -> 1

2. Problem: Maximum Depth of Binary Tree

Problem Statement:
Write a function to find the maximum depth of a binary tree.

Input:
A binary tree.

Output:
The maximum depth of the binary tree.

Example:
Input:
3
/
9 20
/
15 7
Output:
Maximum Depth: 3

3. Problem: Fibonacci Sequence using Dynamic Programming

Problem Statement:
Write a dynamic programming solution to find the nth Fibonacci number.

Input:
An integer n.

Output:
The nth Fibonacci number.

Example:
Input:
n = 6
Output:
Fibonacci number at position 6: 8
