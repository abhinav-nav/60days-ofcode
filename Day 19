Day 19: Sorting and Searching

1. Problem: Intersection of Two Arrays

Problem Statement:
Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

Input:
Two integer arrays nums1 and nums2.

Output:
An array containing the intersection of nums1 and nums2.

Example:
Input:
nums1 = [1,2,2,1], nums2 = [2,2]
Output:
[2]

2. Problem: Search in Rotated Sorted Array

Problem Statement:
You are given an integer array nums sorted in ascending order, which is rotated at some pivot unknown to you beforehand. You are also given an integer target. If target is found in the array return its index, otherwise, return -1.

Input:
An integer array nums and an integer target.

Output:
The index of target in nums if it exists, otherwise -1.

Example:
Input:
nums = [4,5,6,7,0,1,2], target = 0
Output:
4

3. Problem: Merge K Sorted Lists

Problem Statement:
Merge k sorted linked lists and return it as one sorted list.

Input:
An array of linked lists.

Output:
The merged sorted linked list.

Example:
Input:
lists = [[1,4,5],[1,3,4],[2,6]]
Output:
[1,1,2,3,4,4,5,6]

