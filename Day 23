
Day 23: Sorting and Searching

1 Problem: Merge Sorted Array

Problem Statement:
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
- The number of elements initialized in nums1 and nums2 are m and n respectively.
- You may assume that nums1 has a size equal to m + n such that it has enough space to hold additional elements from nums2.

Input:
Two sorted integer arrays nums1 and nums2.

Output:
Merged sorted array nums1.

Example:
Input:
nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output:
[1,2,2,3,5,6]

2. Problem: Search in Rotated Sorted Array

Problem Statement:
You are given an integer array nums sorted in ascending order, which is rotated at some pivot unknown to you beforehand. You are also given an integer target. If target is found in the array return its index, otherwise, return -1.

Input:
An integer array nums and an integer target.

Output:
The index of target in nums if it exists, otherwise -1.

Example:
Input:
nums = [4,5,6,7,0,1,2], target = 0
Output:
4

3. Problem: Find Peak Element

Problem Statement:
A peak element in an array is an element that is strictly greater than its neighbors.

Given an integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.

You may imagine that nums[-1] = nums[n] = -âˆž.

Input:
An integer array nums.

Output:
The index of the peak element.

Example:
Input:
nums = [1,2,3,1]
Output:
2

