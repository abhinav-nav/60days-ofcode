
Day 22: Dynamic Programming

1. Problem: Climbing Stairs

Problem Statement:
You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you reach the top?

Input:
An integer n representing the number of steps to reach the top.

Output:
The number of distinct ways to reach the top.

Example:
Input:
n = 4
Output:
5
Explanation: There are five ways to climb the stairs: 1 step + 1 step + 1 step + 1 step, 2 steps + 1 step + 1 step, 1 step + 2 steps + 1 step, 1 step + 1 step + 2 steps, 2 steps + 2 steps.

2. Problem: Unique Paths

Problem Statement:
A robot is located at the top-left corner of a m x n grid. The robot can only move either down or right at any point in time. How many unique paths are there to reach the bottom-right corner of the grid?

Input:
Two integers m and n representing the size of the grid.

Output:
The number of unique paths to reach the bottom-right corner.

Example:
Input:
m = 3, n = 7
Output:
28

3. Problem: Edit Distance

Problem Statement:
Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.

You have the following three operations permitted on a word:

- Insert a character
- Delete a character
- Replace a character

Input:
Two strings word1 and word2.

Output:
The minimum number of operations required to convert word1 to word2.

Example:
Input:
word1 = "horse", word2 = "ros"
Output:
3
Explanation: 
- Replace 'h' with 'r'.
- Remove 'r'.
- Remove 'e'.

