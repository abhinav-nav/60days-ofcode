Day 13: Trees and Graphs

1. Problem: Check if Binary Tree is Symmetric

Problem Statement:
Given a binary tree, determine if it is symmetric around its center.

Input:
A binary tree.

Output:
True if the binary tree is symmetric, otherwise false.

Example:
Input:
1
/
2 2
/ \ /
3 4 4 3
Output:
True

2. Problem: Find the Shortest Path in a Graph

Problem Statement:
Given an undirected graph and two vertices, find the shortest path between these two vertices.

Input:
An undirected graph represented as an adjacency list and two vertices.

Output:
The shortest path between the two vertices.

Example:
Input:
Graph:
{
0: [1, 2],
1: [0, 2, 3],
2: [0, 1, 4],
3: [1, 4],
4: [2, 3]
}
Vertices: 0, 4
Output:
Shortest Path: 0 -> 2 -> 4


3. Problem: Detect Cycle in a Directed Graph

Problem Statement:
Given a directed graph, determine if the graph contains a cycle.

Input:
A directed graph represented as an adjacency list.

Output:
True if the graph contains a cycle, otherwise false.

Example:
Input:
Graph:
{
  0: [1],
  1: [2],
  2: [0, 3],
  3: [3]
}
Output:
True

This question now presents a different scenario, asking to detect cycles in a directed graph, providing a fresh challenge for Day 13.
