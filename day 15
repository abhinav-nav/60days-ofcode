Day 15: Sorting and Searching

1. Problem: Binary Search

Problem Statement:
Implement the binary search algorithm to find the index of a target element in a sorted array.

Input:
A sorted array of integers and a target element.

Output:
The index of the target element if found, otherwise -1.

Example:
Input:
Array: [2, 4, 6, 8, 10, 12, 14]
Target: 10
Output:
Index: 4

2. Problem: Merge Intervals

Problem Statement:
Given an array of intervals where intervals[i] = [start_i, end_i], merge all overlapping intervals and return the merged intervals in sorted order.

Input:
An array of intervals.

Output:
The merged intervals.

Example:
Input:
Intervals: [[1,3],[2,6],[8,10],[15,18]]
Output:
[[1,6],[8,10],[15,18]]

3. Problem: Kth Largest Element in an Array

Problem Statement:
Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

Input:
An unsorted array of integers and an integer k.

Output:
The kth largest element.

Example:
Input:
Array: [3,2,1,5,6,4], k = 2
Output:
5
